name: Создание релиза с семантическим версионированием

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Извлечение кода из репозитория
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Важно для получения всех тегов и истории коммитов

      # Использование стороннего действия для определения следующей версии
      - name: Определение следующей версии
        id: next_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          default_bump: minor # Может быть 'patch', 'minor' или 'major'
          release_branches: master # Ограничивает действие веткой master

      # Архивирование папки dist с именем, включающим новую версию
      - name: Архивирование папки dist
        run: |
          mkdir -p envelope-releases/envelope-${{ steps.next_version.outputs.new_tag }}/ # Создаем временную папку с именем envelope-<новая версия>

          cp -r envelope/dist/* envelope-releases/envelope-${{ steps.next_version.outputs.new_tag }}/ # Копируем содержимое dist в эту папку
          pushd envelope-releases # Переходим в директорию envelope-releases
          zip -r "../envelope-${{ steps.next_version.outputs.new_tag }}.zip" "envelope-${{ steps.next_version.outputs.new_tag }}" # Создаем архив с сохранением структуры
          popd # Возвращаемся обратно
      # Создание релиза с использованием новой версии
      - name: Создание релиза
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.next_version.outputs.new_tag }}
          name: Envelope ${{ steps.next_version.outputs.new_tag }}
          body: "${{ github.event.head_commit.message }}"
          files: |
            envelope-${{ steps.next_version.outputs.new_tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}